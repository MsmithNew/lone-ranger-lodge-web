
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://uktyewnnkbqjopjeoznp.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVrdHlld25ua2Jxam9wamVvem5wIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY0Njc0NzcsImV4cCI6MjA2MjA0MzQ3N30.SyK_AgPVgbyex-s2u4AQG_gAN59AGg7PIw6TseA0GpY";

// Create client with increased timeouts and auto-retries
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
    },
    global: {
      headers: {
        'x-application-name': 'lov-rv-park',
      },
      // Increase timeouts to handle potential network issues
      fetch: (url, options) => {
        return fetch(url, {
          ...options,
          // Increase timeout to 30 seconds
          signal: AbortSignal.timeout(30000),
        }).catch(error => {
          console.error("Fetch error:", error);
          // Re-throw for client handling
          throw error;
        });
      },
    },
  }
);

// Add a helper to check connectivity
export const checkSupabaseConnection = async (): Promise<boolean> => {
  try {
    // Try a minimal request to check connectivity
    const start = Date.now();
    const { error } = await supabase.from('page_content').select('count', { count: 'exact', head: true });
    const end = Date.now();
    
    console.log(`Supabase connection check: ${end - start}ms, error: ${error ? 'Yes' : 'No'}`);
    
    return !error;
  } catch (error) {
    console.error("Supabase connection check failed:", error);
    return false;
  }
};
